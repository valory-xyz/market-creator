agent_name: market_maker
author: valory
version: 0.1.0
license: Apache-2.0
description: The market maker agent.
aea_version: '>=1.19.0, <2.0.0'
fingerprint:
  README.md: bafybeiayhfxag74adpnrcejngjx6n333kbhucrg2p3fktdgq4wqy3dl7ky
  __init__.py: bafybeifamf4vln3qgmifksv5icmhnkelqirbaauehuv5hpsu2twesb2vni
fingerprint_ignore_patterns: []
connections:
- valory/abci:0.1.0:bafybeicksmavx23ralbdw3ajxv5fq5s4c3wzhbc3zdudefm4jqsgrg72ai
- valory/http_client:0.23.0:bafybeihi772xgzpqeipp3fhmvpct4y6e6tpjp4sogwqrnf3wqspgeilg4u
- valory/http_server:0.22.0:bafybeihpgu56ovmq4npazdbh6y6ru5i7zuv6wvdglpxavsckyih56smu7m
- valory/ledger:0.19.0:bafybeig7woeog4srdby75hpjkmx4rhpkzncbf4h2pm5r6varsp26pf2uhu
- valory/openai:0.1.0:bafybeigyehjbahya5mp7vyp5tjvn36rey4btvzskp3ql3mgxp3zu6gwq5a
- valory/p2p_libp2p_client:0.1.0:bafybeid3xg5k2ol5adflqloy75ibgljmol6xsvzvezebsg7oudxeeolz7e
contracts:
- valory/gnosis_safe:0.1.0:bafybeidcb25wneezfd2iaiqa7ygxlimwwacvycahhenvpw7tdvwdigllzm
- valory/gnosis_safe_proxy_factory:0.1.0:bafybeidwwhkqin3zchbjl7ro6n3tj5kwbfhfvmrdpuxn7owy3b4ktrluba
- valory/multisend:0.1.0:bafybeig5byt5urg2d2bsecufxe5ql7f4mezg3mekfleeh32nmuusx66p4y
- valory/realitio:0.1.0:bafybeignaxfk7fjlfa4lioflwsfru2z5xln5cyvyew3if5oas2sgm5wuii
- valory/conditional_tokens:0.1.0:bafybeibnzmqmeph4cj5vfh3s622mo2o5627vjjwc6bptrhj4dk65mzgvhe
- valory/fpmm_deterministic_factory:0.1.0:bafybeigjfuahxhb2y4q5ueayry55boaojcryoamwr6fshgayf5s762vpl4
- valory/service_registry:0.1.0:bafybeiekytropd5ysnap2wkekub3byi5jbda3qll7awchvhu5plbpafhmi
- valory/wxdai:0.1.0:bafybeidalocwbhmbto6ii6adldtpcughtdt6j3v4tv36utevjk2wrdyqie
- valory/fpmm:0.1.0:bafybeiai2ruj27nnglvn7yc5atojyojo3fkmofw6wrjgz2ybps2uwdizx4
protocols:
- open_aea/signing:1.0.0:bafybeihv62fim3wl2bayavfcg3u5e5cxu3b7brtu4cn5xoxd6lqwachasi
- valory/abci:0.1.0:bafybeiaqmp7kocbfdboksayeqhkbrynvlfzsx4uy4x6nohywnmaig4an7u
- valory/acn:1.1.0:bafybeidluaoeakae3exseupaea4i3yvvk5vivyt227xshjlffywwxzcxqe
- valory/contract_api:1.0.0:bafybeidgu7o5llh26xp3u3ebq3yluull5lupiyeu6iooi2xyymdrgnzq5i
- valory/http:1.0.0:bafybeifugzl63kfdmwrxwphrnrhj7bn6iruxieme3a4ntzejf6kmtuwmae
- valory/ipfs:0.1.0:bafybeiftxi2qhreewgsc5wevogi7yc5g6hbcbo4uiuaibauhv3nhfcdtvm
- valory/ledger_api:1.0.0:bafybeihdk6psr4guxmbcrc26jr2cbgzpd5aljkqvpwo64bvaz7tdti2oni
- valory/llm:1.0.0:bafybeihj2orqapokafg7co3wlogwgf6cckaaj2bz3nuv4rm3opkoyhrlp4
- valory/tendermint:0.1.0:bafybeig4mi3vmlv5zpbjbfuzcgida6j5f2nhrpedxicmrrfjweqc5r7cra
skills:
- valory/abstract_abci:0.1.0:bafybeieh4ei3qdelmacnm7vwq57phoewgumr3udvxt6pybmuggwc3yk65q
- valory/abstract_round_abci:0.1.0:bafybeiar2yhzxacfe3qqamqhaihtlcimquwedffctw55sowx6rac3cm3ui
- valory/market_maker_abci:0.1.0:bafybeietyfyi6qphajffab37bueo4seb2fdtptak6sneszk7ww7fjhwr5y
- valory/registration_abci:0.1.0:bafybeieu7vq3pyns4t5ty6u3sbmpkd7yznpg3rmqifoz3jhy7pmqyg3w6q
- valory/market_creation_manager_abci:0.1.0:bafybeidgpctdcbxubjdlqzcrzr2qwtuocv236ngtjduabkmja7qvqr3fri
- valory/reset_pause_abci:0.1.0:bafybeiameewywqigpupy3u2iwnkfczeiiucue74x2l5lbge74rmw6bgaie
- valory/termination_abci:0.1.0:bafybeif2zim2de356eo3sipkmoev5emwadpqqzk3huwqarywh4tmqt3vzq
- valory/transaction_settlement_abci:0.1.0:bafybeic3tccdjypuge2lewtlgprwkbb53lhgsgn7oiwzyrcrrptrbeyote
- valory/mech_interact_abci:0.1.0:bafybeieryw7rk2tspyxx46loqqqimr2l5vvhtshiyg2mmdxijzb7pdoi6a
default_ledger: ethereum
required_ledgers:
- ethereum
- cosmos
default_routing: {}
connection_private_key_paths: {}
private_key_paths: {}
logging_config:
  version: 1
  disable_existing_loggers: false
  formatters:
    standard:
      format: '[%(asctime)s] [%(levelname)s] %(message)s'
  handlers:
    logfile:
      class: logging.FileHandler
      formatter: standard
      filename: ${LOG_FILE:str:log.txt}
      level: ${LOG_LEVEL:str:INFO}
    console:
      class: logging.StreamHandler
      formatter: standard
      stream: ext://sys.stdout
  loggers:
    aea:
      handlers:
      - logfile
      - console
      propagate: true
skill_exception_policy: stop_and_exit
dependencies:
  open-aea-ledger-cosmos:
    version: ==1.52.0
  open-aea-ledger-ethereum:
    version: ==1.52.0
  open-aea-test-autonomy:
    version: ==0.14.12
default_connection: null
---
public_id: valory/abci:0.1.0
type: connection
config:
  target_skill_id: valory/market_maker_abci:0.1.0
  host: ${str:localhost}
  port: ${int:26658}
  use_tendermint: ${bool:false}
---
public_id: valory/ledger:0.19.0
type: connection
config:
  ledger_apis:
    ethereum:
      address: ${str:https://rpc.gnosischain.com}
      chain_id: ${int:100}
      poa_chain: ${bool:false}
      default_gas_price_strategy: ${str:eip1559}
    gnosis:
      address: ${str:https://rpc.gnosischain.com}
      chain_id: ${int:100}
      poa_chain: ${bool:false}
      default_gas_price_strategy: ${str:eip1559}
---
public_id: valory/openai:0.1.0
type: connection
config:
  engine: ${str:gpt-4}
  max_tokens: ${int:700}
  openai_api_key: ${str:null}
  temperature: ${float:0.7}
---
public_id: valory/p2p_libp2p_client:0.1.0
type: connection
config:
  nodes:
  - uri: ${str:acn.staging.autonolas.tech:9005}
    public_key: ${str:02d3a830c9d6ea1ae91936951430dee11f4662f33118b02190693be835359a9d77}
cert_requests:
- identifier: acn
  ledger_id: ethereum
  message_format: '{public_key}'
  not_after: '2023-01-01'
  not_before: '2022-01-01'
  public_key: ${str:02d3a830c9d6ea1ae91936951430dee11f4662f33118b02190693be835359a9d77}
  save_path: .certs/acn_cosmos_11000.txt
is_abstract: false
---
public_id: valory/market_maker_abci:0.1.0
type: skill
models:
  benchmark_tool:
    args:
      log_dir: ${str:/logs}
  params:
    args:
      market_identification_prompt: ${str:Based on the following news snippets under
        INPUT, formulate 5 prediction market questions with clear, objective\noutcomes
        that can be verified on a specific date and leave no room for interpretation
        or subjectivity.\nAvoid incorporating questions that could potentially encourage
        unethical behavior or violence.\nEvery question must be related to an event
        happening on or by {event_day}. The answer to the question\nmust be unknown
        until that day, but it must be known after that day.\nYour questions should
        follow a structure similar to this;\n\"Will VERIFIABLE_BINARY_OUTCOME_OR_PREDICTION
        occur on {event_day}\".\nYour output must follow the output format detailed
        under \"OUTPUT FORMAT\".\n\nINPUT\n{input_news}\n\nOUTPUT_FORMAT\n* Your output
        response must be only a single JSON array to be parsed by Python \"json.loads()\".\n*
        All of the date strings should be represented in YYYY-MM-DD format.\n* Each
        entry of the JSON array must be a JSON object containing the fields;\n - question;
        The binary question to open a prediction market.\n - answers; The possible
        answers to the question.\n - resolution_date; The resolution date for the
        outcome of the market to be verified.\n - topic; One word description of the
        topic of the news and it should be one of; {topics}.\n* Output only the JSON
        object. Do not include any other contents in your response.}
      max_proposed_markets: ${int:-1}
      max_approved_markets: ${int:-1}
      markets_to_approve_per_epoch: ${int:1}
      markets_to_approve_per_day: ${int:10}
      min_approve_markets_epoch_seconds: ${int:43200}
      approve_market_event_days_offset: ${int:5}
      market_approval_server_url: ${str:http://127.0.0.1:5000}
      market_approval_server_api_key: ${str:api_key}
      newsapi_endpoint: ${str:https://newsapi.org/v2}
      newsapi_api_key: ${str:f1ea36ae6175474bbcbae11eca64d0b9}
      topics: ${list:["business","cryptocurrency","politics","science","technology","trending","fashion","social","health","sustainability","internet","travel","food","pets","animals","curiosities","music","economy","arts","entertainment","weather","sports","finance","international"]}
      market_fee: ${float:2.0}
      initial_funds: ${float:1.0}
      market_timeout: ${int:1}
      min_market_proposal_interval_seconds: ${int:7200}
      news_sources: ${list:["bbc-news","bbc-sport","abc-news","cnn","google-news","reuters","usa-today","breitbart-news","the-verge","techradar"]}
      event_offset_start_days: ${int:4}
      event_offset_end_days: ${int:7}
      market_proposal_round_timeout_seconds_per_day: ${int:45}
      realitio_contract: ${str:0x79e32aE03fb27B07C89c0c568F80287C01ca2E57}
      realitio_oracle_proxy_contract: ${str:0xab16d643ba051c11962da645f74632d3130c81e2}
      conditional_tokens_contract: ${str:0xCeAfDD6bc0bEF976fdCd1112955828E00543c0Ce}
      fpmm_deterministic_factory_contract: ${str:0x9083A2B699c0a4AD06F63580BDE2635d26a3eeF0}
      collateral_tokens_contract: ${str:0xe91d153e0b41518a2ce8dd3d7944fa863463a97d}
      arbitrator_contract: ${str:0xe40dd83a262da3f56976038f1554fe541fa75ecd}
      multisend_address: ${str:0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761}
      multisend_batch_size: ${int:5}
      ipfs_address: ${str:https://gateway.autonolas.tech/ipfs/}
      on_chain_service_id: ${int:null}
      reset_tendermint_after: ${int:1}
      reset_pause_duration: ${int:1800}
      mech_interact_round_timeout_seconds: ${int:900}
      service_id: market_maker
      service_registry_address: ${str:0x1cEe30D08943EB58EFF84DD1AB44a6ee6FEff63a}
      setup:
        all_participants: ${list:["0x10E867Ac2Fb0Aa156ca81eF440a5cdf373bE1AaC"]}
        safe_contract_address: ${str:0x89c5cc945dd550BcFfb72Fe42BfF002429F46Fec}
        consensus_threshold: ${int:null}
      share_tm_config_on_startup: ${bool:false}
      tendermint_check_sleep_delay: ${int:3}
      tendermint_com_url: ${str:http://localhost:8080}
      tendermint_max_retries: ${int:5}
      tendermint_url: ${str:http://localhost:26657}
      tendermint_p2p_url: ${str:localhost:26656}
      termination_sleep: ${int:900}
      termination_from_block: ${int:0}
      tx_timeout: ${float:10.0}
      round_timeout_seconds: ${float:60}
      use_termination: ${bool:false}
      use_slashing: ${bool:false}
      slash_cooldown_hours: ${int:3}
      realitio_answer_question_bond: ${int:1000000000000000}
      realitio_answer_question_bounty: ${int:0}
      questions_to_close_batch_size: ${int:1}
      slash_threshold_amount: ${int:10000000000000000}
      light_slash_unit_amount: ${int:5000000000000000}
      serious_slash_unit_amount: ${int:8000000000000000}
      xdai_threshold: ${int:1000000000000000000}
      google_api_key: ${str:google_api_key}
      google_engine_id: ${str:google_engine_id}
      openai_api_key: ${str:openai_api_key}
      mech_contract_address: ${str:0x77af31de935740567cf4ff1986d04b2c964a786a}
      mech_tool_resolve_market: ${str:resolve-market-reasoning-gpt-4}
      answer_retry_intervals: ${list:[0, 86400, 259200, 604800, 1209600]}
      service_endpoint_base: ${str:https://dummy_service.autonolas.tech/}
  randomness_api:
    args:
      method: ${str:GET}
      response_key: ${str:null}
      response_type: ${str:dict}
      retries: ${int:5}
      url: ${str:https://drand.cloudflare.com/public/latest}
  mech_response:
    args:
      headers:
        Content-Type: ${str:application/json}
      method: ${str:GET}
      response_key: ${str:result}
      response_type: ${str:str}
      retries: ${int:5}
      url: ${str:''}
  omen_subgraph:
    args:
      headers:
        Content-Type: ${str:application/json}
      method: ${str:POST}
      response_key: ${str:data:fixedProductMarketMakers}
      response_type: ${str:list}
      retries: ${int:5}
      url: ${str:https://api.thegraph.com/subgraphs/name/protofire/omen-xdai}
is_abstract: false
---
public_id: valory/http_server:0.22.0:bafybeicblltx7ha3ulthg7bzfccuqqyjmihhrvfeztlgrlcoxhr7kf6nbq
type: connection
config:
  host: 0.0.0.0
  target_skill_id: valory/market_maker_abci:0.1.0
