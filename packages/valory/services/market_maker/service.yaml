name: market_maker
author: valory
version: 0.1.0
description: The market maker service.
aea_version: '>=1.0.0, <2.0.0'
license: Apache-2.0
fingerprint:
  README.md: bafybeibwz3af6326msp4h3kqehijvmyhaytvyfbo3o2npc2w4b6zrg6pfq
fingerprint_ignore_patterns: []
agent: valory/market_maker:0.1.0:bafybeibbnx4azoeyuh2zsd6ebxvv2k2y3yvmuhfl4776p5pz4tzjb5uyuu
number_of_agents: 1
deployment:
  agent:
    ports:
      0:
        8000: 8000
---
public_id: valory/market_maker_abci:0.1.0
type: skill
models:
  benchmark_tool:
    args:
      log_dir: /logs
  params:
    args:
      market_identification_prompt: ${MARKET_IDENTIFICATION_PROMPT:str:Based on the
        following news snippets under INPUT, formulate 5 prediction market questions
        with clear, objective\noutcomes that can be verified on a specific date and
        leave no room for interpretation or subjectivity.\nAvoid incorporating questions
        that could potentially encourage unethical behavior or violence.\nEvery question
        must be related to an event happening on or by {event_day}. The answer to
        the question\nmust be unknown until that day, but it must be known after that
        day.\nYour questions should follow a structure similar to this;\n\"Will VERIFIABLE_BINARY_OUTCOME_OR_PREDICTION
        occur on {event_day}\".\nYour output must follow the output format detailed
        under \"OUTPUT FORMAT\".\n\nINPUT\n{input_news}\n\nOUTPUT_FORMAT\n* Your output
        response must be only a single JSON array to be parsed by Python \"json.loads()\".\n*
        All of the date strings should be represented in YYYY-MM-DD format.\n* Each
        entry of the JSON array must be a JSON object containing the fields;\n - question;
        The binary question to open a prediction market.\n - answers; The possible
        answers to the question.\n - resolution_date; The resolution date for the
        outcome of the market to be verified.\n - topic; One word description of the
        topic of the news and it should be one of; {topics}.\n* Output only the JSON
        object. Do not include any other contents in your response.}
      max_proposed_markets: ${MAX_PROPOSED_MARKETS:int:-1}
      max_approved_markets: ${MAX_APPROVED_MARKETS:int:-1}
      markets_to_approve_per_epoch: ${MARKETS_TO_APPROVE_PER_EPOCH:int:1}
      markets_to_approve_per_day: ${MARKETS_TO_APPROVE_PER_DAY:int:10}
      min_approve_markets_epoch_seconds: ${MIN_APPROVE_MARKETS_EPOCH_SECONDS:int:43200}
      approve_market_event_days_offset: ${APPROVE_MARKET_EVENT_DAYS_OFFSET:int:5}
      market_approval_server_url: ${MARKET_APPROVAL_SERVER_URL:str:http://127.0.0.1:5000}
      market_approval_server_api_key: ${MARKET_APPROVAL_SERVER_API_KEY:str:api_key}
      newsapi_endpoint: ${NEWSAPI_ENDPOINT:str:https://newsapi.org/v2}
      newsapi_api_key: ${NEWSAPI_API_KEY:str:f1ea36ae6175474bbcbae11eca64d0b9}
      topics: ${TOPICS:list:["business","cryptocurrency","politics","science","technology","trending","fashion","social","health","sustainability","internet","travel","food","pets","animals","curiosities","music","economy","arts","entertainment","weather","sports","finance","international"]}
      market_fee: ${MARKET_FEE:float:2.0}
      initial_funds: ${INITIAL_FUNDS:float:1.0}
      market_timeout: ${MARKET_TIMEOUT:int:1}
      min_market_proposal_interval_seconds: ${MIN_MARKET_PROPOSAL_INTERVAL_SECONDS:int:7200}
      news_sources: ${NEWS_SOURCES:list:["bbc-news","bbc-sport","abc-news","cnn","google-news","reuters","usa-today","breitbart-news","the-verge","techradar"]}
      event_offset_start_days: ${EVENT_OFFSET_START_DAYS:int:4}
      event_offset_end_days: ${EVENT_OFFSET_END_DAYS:int:7}
      market_proposal_round_timeout_seconds_per_day: ${MARKET_PROPOSAL_ROUND_TIMEOUT_SECONDS_PER_DAY:int:45}
      realitio_contract: ${REALITIO_CONTRACT:str:0x79e32aE03fb27B07C89c0c568F80287C01ca2E57}
      realitio_oracle_proxy_contract: ${REALITIO_ORACLE_PROXY_CONTRACT:str:0xab16d643ba051c11962da645f74632d3130c81e2}
      conditional_tokens_contract: ${CONDITIONAL_TOKENS_CONTRACT:str:0xCeAfDD6bc0bEF976fdCd1112955828E00543c0Ce}
      fpmm_deterministic_factory_contract: ${FPMM_DETERMINISTIC_FACTORY_CONTRACT:str:0x9083A2B699c0a4AD06F63580BDE2635d26a3eeF0}
      collateral_tokens_contract: ${COLLATERAL_TOKENS_CONTRACT:str:0xe91d153e0b41518a2ce8dd3d7944fa863463a97d}
      arbitrator_contract: ${ARBITRATOR_CONTRACT:str:0xe40dd83a262da3f56976038f1554fe541fa75ecd}
      multisend_address: ${MULTISEND_ADDRESS:str:0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761}
      multisend_batch_size: ${MULTISEND_BATCH_SIZE:int:1}
      ipfs_address: ${IPFS_ADDRESS:str:https://gateway.autonolas.tech/ipfs/}
      mech_contract_address: ${MECH_CONTRACT_ADDRESS:str:0x77af31de935740567cf4ff1986d04b2c964a786a}
      mech_tool_resolve_market: ${MECH_TOOL_RESOLVE_MARKET:str:resolve-market-reasoning-gpt-4}
      answer_retry_intervals: ${ANSWER_RETRY_INTERVALS:list:[0, 86400, 259200, 604800,
        1209600]}
      on_chain_service_id: ${ON_CHAIN_SERVICE_ID:int:null}
      reset_tendermint_after: ${RESET_TENDERMINT_AFTER:int:1}
      reset_pause_duration: ${RESET_PAUSE_DURATION:int:1800}
      mech_interact_round_timeout_seconds: ${MECH_INTERACT_ROUND_TIMEOUT_SECONDS:int:900}
      service_id: market_maker
      service_registry_address: ${SERVICE_REGISTRY_ADDRESS:str:0x1cEe30D08943EB58EFF84DD1AB44a6ee6FEff63a}
      setup:
        all_participants: ${ALL_PARTICIPANTS:list:["0x10E867Ac2Fb0Aa156ca81eF440a5cdf373bE1AaC"]}
        safe_contract_address: ${SAFE_CONTRACT_ADDRESS:str:0x89c5cc945dd550BcFfb72Fe42BfF002429F46Fec}
        consensus_threshold: ${CONSENSUS_THRESHOLD:int:null}
      share_tm_config_on_startup: ${SHARE_TM_CONFIG_ON_STARTUP:bool:false}
      tendermint_check_sleep_delay: ${TENDERMINT_CHECK_SLEEP_DELAY:int:3}
      tendermint_com_url: ${TENDERMINT_COM_URL:str:http://localhost:8080}
      tendermint_max_retries: ${TENDERMINT_MAX_RETRIES:int:5}
      realitio_answer_question_bond: ${REALITIO_ANSWER_QUESTION_BOND:int:1000000000000000}
      realitio_answer_question_bounty: ${REALITIO_ANSWER_QUESTION_BOUNTY:int:0}
      questions_to_close_batch_size: ${QUESTIONS_TO_CLOSE_BATCH_SIZE:int:1}
      tendermint_url: ${TENDERMINT_URL:str:http://localhost:26657}
      tendermint_p2p_url: ${TENDERMINT_P2P_URL:str:localhost:26656}
      termination_sleep: ${TERMINATION_SLEEP:int:900}
      termination_from_block: ${TERMINATION_FROM_BLOCK:int:0}
      xdai_threshold: ${XDAI_THRESHOLD:int:1000000000000000000}
      tx_timeout: ${TX_TIMEOUT:float:10.0}
      use_termination: ${USE_TERMINATION:bool:false}
      round_timeout_seconds: ${ROUND_TIMEOUT_SECONDS:float:120}
      use_slashing: ${USE_SLASHING:bool:false}
      slash_cooldown_hours: ${SLASH_COOLDOWN_HOURS:int:3}
      slash_threshold_amount: ${SLASH_THRESHOLD_AMOUNT:int:10000000000000000}
      light_slash_unit_amount: ${LIGHT_SLASH_UNIT_AMOUNT:int:5000000000000000}
      serious_slash_unit_amount: ${SERIOUS_SLASH_UNIT_AMOUNT:int:8000000000000000}
      google_api_key: ${GOOGLE_API_KEY:str:google_api_key}
      google_engine_id: ${GOOGLE_ENGINE_ID:str:google_engine_id}
      openai_api_key: ${OPENAI_API_KEY:str:openai_api_key}
      service_endpoint_base: ${SERVICE_ENDPOINT_BASE:str:https://dummy_service.autonolas.tech/}
  randomness_api:
    args:
      method: ${RANDOMNESS_API_METHOD:str:GET}
      response_key: ${RANDOMNESS_API_RESPONSE_KEY:str:null}
      response_type: ${RANDOMNESS_API_RESPONSE_TYPE:str:dict}
      retries: ${RANDOMNESS_API_RETRIES:int:5}
      url: ${RANDOMNESS_API_URL:str:https://drand.cloudflare.com/public/latest}
  mech_response:
    args:
      headers:
        Content-Type: ${MECH_RESPONSE_API_CONTENT_TYPE:str:application/json}
      method: ${MECH_RESPONSE_API_METHOD:str:GET}
      response_key: ${MECH_RESPONSE_API_RESPONSE_KEY:str:result}
      response_type: ${MECH_RESPONSE_API_RESPONSE_TYPE:str:str}
      retries: ${MECH_RESPONSE_API_RETRIES:int:5}
      url: ${MECH_RESPONSE_API_URL:str:''}
  omen_subgraph:
    args:
      headers:
        Content-Type: ${OMEN_SUBGRAPH_CONTENT_TYPE:str:application/json}
      method: ${OMEN_SUBGRAPH_METHOD:str:POST}
      response_key: ${OMEN_SUBGRAPH_RESPONSE_KEY:str:data:fixedProductMarketMakers}
      response_type: ${OMEN_SUBGRAPH_RESPONSE_TYPE:str:list}
      retries: ${OMEN_SUBGRAPH_RETRIES:int:5}
      url: ${OMEN_SUBGRAPH_URL:str:https://api.thegraph.com/subgraphs/name/protofire/omen-xdai}
---
public_id: valory/ledger:0.19.0
type: connection
config:
  ledger_apis:
    ethereum:
      address: ${ETHEREUM_LEDGER_RPC:str:https://rpc.gnosischain.com}
      chain_id: ${ETHEREUM_LEDGER_CHAIN_ID:int:100}
      poa_chain: ${ETHEREUM_LEDGER_IS_POA_CHAIN:bool:false}
      default_gas_price_strategy: ${ETHEREUM_LEDGER_PRICING:str:eip1559}
---
public_id: valory/openai:0.1.0
type: connection
config:
  engine: ${ENGINE:str:gpt-4}
  max_tokens: ${MAX_TOKENS:int:700}
  openai_api_key: ${OPENAI_API_KEY:str:null}
  temperature: ${TEMPERATURE:float:0.7}
---
public_id: valory/p2p_libp2p_client:0.1.0
type: connection
config:
  nodes:
  - uri: ${ACN_URI:str:acn.staging.autonolas.tech:9005}
    public_key: ${ACN_NODE_PUBLIC_KEY:str:02d3a830c9d6ea1ae91936951430dee11f4662f33118b02190693be835359a9d77}
cert_requests:
- identifier: acn
  ledger_id: ethereum
  message_format: '{public_key}'
  not_after: '2023-01-01'
  not_before: '2022-01-01'
  public_key: ${ACN_NODE_PUBLIC_KEY:str:02d3a830c9d6ea1ae91936951430dee11f4662f33118b02190693be835359a9d77}
  save_path: .certs/acn_cosmos_11000.txt
