name: market_maker
author: valory
version: 0.1.0
description: The market maker service.
aea_version: '>=1.0.0, <2.0.0'
license: Apache-2.0
fingerprint:
  README.md: bafybeiaqrtm7sxpddyfgef77qrj4wmwgqjy7mmhmyb65wq5yjph7tcyusa
fingerprint_ignore_patterns: []
agent: valory/market_maker:0.1.0:bafybeifgknul2finqzjpu6zmv6v54fyiwab3tr5jivvvwpjhi7nlviubs4
number_of_agents: 1
deployment:
  agent:
    ports:
      0:
        8000: 8000
---
public_id: valory/market_maker_abci:0.1.0
type: skill
models:
  benchmark_tool:
    args:
      log_dir: /logs
  params:
    args:
      market_identification_prompt: ${MARKET_IDENTIFICATION_PROMPT:str:You are an
        LLM inside a multi-agent system. Your task is to propose a collection of prediction
        market\nquestions based on your input. Your input is under the label \"INPUT\".
        You must follow the instructions\nunder \"INSTRUCTIONS\". You must provide
        your response in the format specified under \"OUTPUT_FORMAT\".\n\nINSTRUCTIONS\n*
        Read the input under the label \"INPUT\" delimited by three backticks.\n*
        The \"INPUT\" specifies a list of recent news headlines, their date, and short
        descriptions.\n* Based on the \"INPUT\" and your training data, you must provide
        a list of binary questions, valid\n    answers and resolution dates to create
        prediction markets.\n* Each market must satisfy the following conditions;\n    -
        The outcome of the market is unknown at the present date.\n    - The outcome
        of the market must be known by its resolution date.\n    - The outcome of
        the market must be related to a deterministic, measurable or verifiable fact.\n    -
        Questions whose answer is known at the present date are invalid.\n    - Questions
        whose answer is subjective or opinionated are invalid.\n    - Questions with
        relative dates are invalid.\n    - Questions about moral values, subjective
        opinions, and not facts are invalid.\n    - Questions in which none of the
        answers are valid will resolve as invalid.\n    - Questions with multiple
        valid answers are invalid.\n    - Questions must not incentivize committing
        an immoral violent action.\n    - The dates in the question need to be in
        YYYY-MM-DD format.\n* The created markets must be different and not overlap
        semantically.\n* You must provide your response in the format specified under
        \"OUTPUT_FORMAT\".\n* Do not include any other contents in your response.\n\nINPUT\n{input_news}\n\nOUTPUT_FORMAT\n*
        Your output response must be only a single JSON array to be parsed by Python\'s
        \"json.loads()\".\n* The JSON array must be of length 5.\n* All of the date
        strings should be represented in YYYY-MM-DD format.\n* Each entry of the JSON
        array must be a JSON object containing the fields;\n    - question; The binary
        question to open a prediction market.\n    - answers; The possible answers
        to the question.\n    - resolution_date; The resolution date for the outcome
        of the market to be verified.\n    - topic; One word description of the topic
        of the news and it should be one of; {topics}.\n* Output only the JSON object.
        Do not include any other contents in your response.}
      num_markets: ${NUM_MARKETS:int:1}
      market_approval_server_url: ${MARKET_APPROVAL_SERVER_URL:str:http://127.0.0.1:5000}
      market_approval_server_api_key: ${MARKET_APPROVAL_SERVER_API_KEY:str:api_key}
      newsapi_endpoint: ${NEWSAPI_ENDPOINT:str:https://newsapi.org/v2/everything}
      newsapi_api_key: ${NEWSAPI_API_KEY:str:f1ea36ae6175474bbcbae11eca64d0b9}
      topics: ${TOPICS:list:["business","cryptocurrency","politics","science","technology"]}
      market_fee: ${MARKET_FEE:float:2.0}
      initial_funds: ${INITIAL_FUNDS:float:1.0}
      market_timeout: ${MARKET_TIMEOUT:int:1}
      minimum_market_time: ${MINIMUM_MARKET_TIME:int:7}
      realitio_contract: ${REALITIO_CONTRACT:str:0x79e32aE03fb27B07C89c0c568F80287C01ca2E57}
      realitio_oracle_proxy_contract: ${REALITIO_ORACLE_PROXY_CONTRACT:str:0xab16d643ba051c11962da645f74632d3130c81e2}
      conditional_tokens_contract: ${CONDITIONAL_TOKENS_CONTRACT:str:0xCeAfDD6bc0bEF976fdCd1112955828E00543c0Ce}
      fpmm_deterministic_factory_contract: ${FPMM_DETERMINISTIC_FACTORY_CONTRACT:str:0x9083A2B699c0a4AD06F63580BDE2635d26a3eeF0}
      collateral_tokens_contract: ${COLLATERAL_TOKENS_CONTRACT:str:0xe91d153e0b41518a2ce8dd3d7944fa863463a97d}
      arbitrator_contract: ${ARBITRATOR_CONTRACT:str:0xe40dd83a262da3f56976038f1554fe541fa75ecd}
      multisend_address: ${MULTISEND_ADDRESS:str:0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761}
      on_chain_service_id: ${ON_CHAIN_SERVICE_ID:int:null}
      reset_tendermint_after: ${RESET_TENDERMINT_AFTER:int:2}
      service_id: market_maker
      service_registry_address: ${SERVICE_REGISTRY_ADDRESS:str:0x1cEe30D08943EB58EFF84DD1AB44a6ee6FEff63a}
      setup:
        all_participants: ${ALL_PARTICIPANTS:list:["0x10E867Ac2Fb0Aa156ca81eF440a5cdf373bE1AaC"]}
        safe_contract_address: ${SAFE_CONTRACT_ADDRESS:str:0x89c5cc945dd550BcFfb72Fe42BfF002429F46Fec}
        consensus_threshold: ${CONSENSUS_THRESHOLD:int:null}
      share_tm_config_on_startup: ${SHARE_TM_CONFIG_ON_STARTUP:bool:false}
      tendermint_check_sleep_delay: ${TENDERMINT_CHECK_SLEEP_DELAY:int:3}
      tendermint_com_url: ${TENDERMINT_COM_URL:str:http://localhost:8080}
      tendermint_max_retries: ${TENDERMINT_MAX_RETRIES:int:5}
      tendermint_url: ${TENDERMINT_URL:str:http://localhost:26657}
      tendermint_p2p_url: ${TENDERMINT_P2P_URL:str:localhost:26656}
      termination_sleep: ${TERMINATION_SLEEP:int:900}
      tx_timeout: ${TX_TIMEOUT:float:10.0}
      use_termination: ${USE_TERMINATION:bool:false}
---
public_id: valory/ledger:0.19.0
type: connection
config:
  ledger_apis:
    ethereum:
      address: ${ETHEREUM_LEDGER_RPC:str:https://rpc.gnosischain.com}
      chain_id: ${ETHEREUM_LEDGER_CHAIN_ID:int:100}
      poa_chain: ${ETHEREUM_LEDGER_IS_POA_CHAIN:bool:false}
      default_gas_price_strategy: ${ETHEREUM_LEDGER_PRICING:str:eip1559}
---
public_id: valory/openai:0.1.0
type: connection
config:
  engine: ${ENGINE:str:gpt-4}
  max_tokens: ${MAX_TOKENS:int:500}
  openai_api_key: ${OPENAI_API_KEY:str:null}
  temperature: ${TEMPERATURE:float:0.7}
---
public_id: valory/p2p_libp2p_client:0.1.0
type: connection
config:
  nodes:
  - uri: ${ACN_URI:str:acn.staging.autonolas.tech:9005}
    public_key: ${ACN_NODE_PUBLIC_KEY:str:02d3a830c9d6ea1ae91936951430dee11f4662f33118b02190693be835359a9d77}
cert_requests:
- identifier: acn
  ledger_id: ethereum
  message_format: '{public_key}'
  not_after: '2023-01-01'
  not_before: '2022-01-01'
  public_key: ${ACN_NODE_PUBLIC_KEY:str:02d3a830c9d6ea1ae91936951430dee11f4662f33118b02190693be835359a9d77}
  save_path: .certs/acn_cosmos_11000.txt
